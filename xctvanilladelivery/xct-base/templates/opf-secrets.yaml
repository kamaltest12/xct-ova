{{- if .Values.secrets.enabled }}
# Secrets for open liberty configuration extension (bootstrap.extension.properties)
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "opf-dev-chart.name" . }}-secrets
  labels:
    app.kubernetes.io/name: {{ include "opf-dev-chart.name" . }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: {{ include "opf-dev-chart.chart" $ }}
type: Opaque
stringData:
  opf-secrets : |-
    {{- with .Values.secrets.opf }}
    # Database credentials
    db.username = {{ .db.username }}
    db.password = {{ .db.password }}
    db.compat.username = {{ .db.compat.username }}
    db.compat.password = {{ .db.compat.password }}
    db.tranlog.username = {{ .db.tranlog.username }}
    db.tranlog.password = {{ .db.tranlog.password }}
    # MQ credentials
    {{- with .messaging.mq }}
    mq.qcf.username = {{ .username }}
    mq.qcf.password = {{ .password }}
    mq.myqcf.username = {{ .username }}
    mq.myqcf.password = {{ .password }}
    mq.otherqcf.username = {{ .username }}
    mq.otherqcf.password = {{ .password }}
    mq.swiftsaaqcf.username = {{ .username }}
    mq.swiftsaaqcf.password = {{ .password }}
    {{- end }}
    {{- with .messaging.kafka }}
    # Kafka connection factory tls credentials
    kafka.cf.sslKeystorePassword={{ .sslKeystorePassword }}
    kafka.cf.sslTruststorePassword={{ .sslTruststorePassword }}
    kafka.cf.sslKeyPassword={{ .sslKeyPassword }}
    {{- end }}
    # Server credentials
    auth.admin.username = {{ .serverConfig.admin.username }}
    auth.admin.password = {{ .serverConfig.admin.password }}
    auth.jmx.username = {{ .serverConfig.jmx.username }}
    auth.jmx.password = {{ .serverConfig.jmx.password }}
    # External systems credentials
    {{- with .externalSystems }}
    {{- if .cbis }}
    auth.cbis.username = {{ .cbis.username }}
    auth.cbis.password = {{ .cbis.password }}
    {{- end }}
    {{- if .fsis }}
    auth.fsis.username = {{ .fsis.username }}
    auth.fsis.password = {{ .fsis.password }}
    {{- end }}
    {{- if .sanctionsCheck }}
    auth.sanctions.check.username = {{ .sanctionsCheck.username }}
    auth.sanctions.check.password = {{ .sanctionsCheck.password }}
    {{- end }}
    {{- if .paymentUploadPush }}
    auth.payment.upload.push.username = {{ .paymentUploadPush.username }}
    auth.payment.upload.push.password = {{ .paymentUploadPush.password }}
    {{- end }}
    {{- if .universalExecutionCallback }}
    auth.universal.execution.callback.username = {{ .universalExecutionCallback.username }}
    auth.universal.execution.callback.password = {{ .universalExecutionCallback.password }}
    {{- end }}
    {{- if .universalExecution }}
    auth.universal.execution.username = {{ .universalExecution.username }}
    auth.universal.execution.password = {{ .universalExecution.password }}
    {{- end }}
    {{- if .universalExecutionInfraOps }}
    auth.universal.infraops.username = {{ .universalExecutionInfraOps.username }}
    auth.universal.infraops.password = {{ .universalExecutionInfraOps.password }}
    {{- end }}
    {{- if .nacas }}
    auth.nacas.username = {{ .nacas.username }}
    auth.nacas.password = {{ .nacas.password }}
    {{- end }}
    {{- if .pcs }}
    auth.pcs.username = {{ .pcs.username }}
    auth.pcs.password = {{ .pcs.password }}
    {{- end }}    
    {{- end }}
    # OpenId clients credentials
    openid.opf.client.id={{ .openid.opf.clientId | default "opfrest" }}
    openid.opf.client.secret={{ .openid.opf.clientSecret }}
    {{- if .openid.opfIdp2 }}
        openid.idp2.client.id={{ .openid.opfIdp2.clientId }}
        openid.idp2.client.secret={{ .openid.opfIdp2.clientSecret }}
    {{- end }}
    # TLS credentials
    ssl.keystore.password={{ .tls.keystore.password }}
    ssl.truststore.password={{ .tls.truststore.password }}
    {{- end }}
{{- end }}
